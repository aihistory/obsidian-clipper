# SCSS 样式标准

## 文件组织
- 使用 SCSS 语法，避免 SASS 语法
- 按功能组织样式文件：
  - [src/style.scss](mdc:src/style.scss) - 主样式
  - [src/highlighter.scss](mdc:src/highlighter.scss) - 高亮器样式
  - [src/reader.scss](mdc:src/reader.scss) - 阅读器样式

## 命名约定
- 使用 BEM 方法论 (Block__Element--Modifier)
- 使用 kebab-case 命名类名
- 使用有意义的类名，避免缩写

## 变量和混合
- 定义颜色、字体、间距等变量
- 使用 `$` 前缀定义变量
- 创建可复用的混合器 (mixins)
- 使用 `@import` 导入其他 SCSS 文件

## 嵌套规则
- 限制嵌套深度不超过 3 层
- 使用 `&` 引用父选择器
- 避免过度嵌套导致选择器过重

## 响应式设计
- 使用媒体查询适配不同屏幕尺寸
- 优先使用相对单位 (rem, em, %)
- 考虑浏览器扩展的弹出窗口尺寸限制

## 浏览器兼容性
- 考虑不同浏览器的 CSS 支持差异
- 使用 autoprefixer 自动添加浏览器前缀
- 测试在 Chrome、Firefox、Safari 中的表现

## 示例
```scss
// 变量定义
$primary-color: #7c3aed;
$border-radius: 8px;
$font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;

// 混合器
@mixin button-base {
  padding: 8px 16px;
  border-radius: $border-radius;
  border: none;
  cursor: pointer;
  font-family: $font-family;
  transition: all 0.2s ease;
}

@mixin responsive($breakpoint) {
  @if $breakpoint == mobile {
    @media (max-width: 768px) { @content; }
  }
}

// 组件样式
.clipper-button {
  @include button-base;
  background-color: $primary-color;
  color: white;
  
  &:hover {
    background-color: darken($primary-color, 10%);
  }
  
  &--secondary {
    background-color: transparent;
    border: 1px solid $primary-color;
    color: $primary-color;
  }
  
  @include responsive(mobile) {
    width: 100%;
    margin-bottom: 8px;
  }
}
```
description:
globs:
alwaysApply: false
---
